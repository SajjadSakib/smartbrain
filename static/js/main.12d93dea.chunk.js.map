{"version":3,"sources":["components/Navigation.js","components/logo/Logo.js","components/Rank/Rank.js","components/imageLinkForm/ImageLinkForm.js","components/FaceRecognation/FaceRecognation.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","serviceWorker.js","index.js","components/logo/brain.png"],"names":["navigation","onRouteChange","isSignedIn","style","display","justifyContent","className","onClick","Logo","options","max","height","width","paddingTop","src","brain","alt","Rank","name","entries","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","FaceRecognation","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","props","onEmailChange","data","setState","email","target","value","onPasswordChange","password","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","state","then","response","json","loadUser","this","htmlFor","Component","Register","onNameChange","onSubmitRegister","ParticleOption","particles","number","density","enable","value_area","initialstate","input","route","user","joined","App","calculateFace","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","event","count","Object","assign","url","catch","err","console","log","params","Navigation","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.12d93dea.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst navigation =({onRouteChange,isSignedIn})=>{\r\n\t// eslint-disable-next-line\r\n\t\t{if(isSignedIn){\r\n\t\t\treturn(\r\n\t\t\t<nav style={{display:'flex', justifyContent:'flex-end'}}>\r\n\t\t\t <p className='f3 link dim black underline pointer' onClick={()=>onRouteChange('SignIn')}>SignOut</p>\r\n\t\t\t</nav>)\r\n\t\t}else{\r\n\t\t\treturn(\r\n\t\t\t<nav style={{display:'flex', justifyContent:'flex-end'}}>\r\n\t\t\t <p className='f3 link dim black underline pointer mr2' onClick={()=>onRouteChange('SignIn')}>SignIn</p>\r\n\t\t\t <p className='f3 link dim black underline pointer' onClick={()=>onRouteChange('Register')}>Register</p>\r\n\t\t\t</nav>\r\n\t\t\t)\r\n \t\t}\r\n \t}\r\n\t\t\r\n\r\n\r\n}\r\nexport default navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport brain from './brain.png';\r\n\r\nconst Logo =()=>{\r\n\treturn(\r\n\t\t<div className='ma4 mt0'>\r\n\t\t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n \t\t\t\t<div className=\"Tilt-inner pa3\" style={{paddingTop:'5px'}}> <img src ={brain} alt ='brain'/></div>\r\n\t\t\t</Tilt>\r\n\r\n\t\t</div>)\r\n}\r\nexport default Logo;","import React from 'react';\r\n\r\nconst Rank =({name,entries})=>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t <p className='f3 pa0'>{`Hiii ${name} !! your current entries are.......`}</p>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t <p className='f1 pa0'>{`${entries}`}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t)\r\n\r\n}\r\nexport default Rank;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm =({onInputChange,onButtonSubmit})=>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<p className='f3'>This Smartbrain will detect your face.Give it a try...</p>\r\n\t\t\t<div className='center '>\r\n\t\t\t\t<div className='sa pa4 br3 shadow-5 form'>\r\n\t\t\t\t\t<input className=' w-70 pa2 f4 ' type='text' onChange={onInputChange}></input>\r\n\t\t\t\t\t<button className=' w-30  grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onButtonSubmit}>Detect</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>)\r\n}\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './FaceRecognation.css';\r\nconst FaceRecognation =({imageUrl,box})=>{\r\n\treturn(\r\n\t\t<div className='center ma '>\r\n\t\t\t<div className=' center absolute center mt2'>\r\n\t\t\t\t<img className='center' id='face' src={imageUrl} alt='' width='500px' height='auto'/>\r\n\t\t\t\t<div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n\t\t\t</div>\r\n\t\t</div>)\r\n}\r\nexport default FaceRecognation;\r\n// className='bounding-box' style={{top:box.topRow,left:box.leftCol,bottom:box.bottomRow,right:box.rightCol}}","import React,{Component} from 'react';\r\n\r\n\r\n\r\n\r\nclass SignIn extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      email:'',\r\n      password:''\r\n    }\r\n  }\r\n\r\n  onEmailChange=(data)=>{\r\n  this.setState({email:data.target.value})\r\n}\r\nonPasswordChange=(data)=>{\r\n  this.setState({password:data.target.value})\r\n}\r\n\r\nonSubmitSignIn=()=>{\r\nfetch('https://frozen-mountain-28132.herokuapp.com/signin',{\r\n        method:'post',\r\n        headers:{'Content-Type':'application/json'},\r\n        body:JSON.stringify({\r\n          email:this.state.email,\r\n          password:this.state.password\r\n        })\r\n      })\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n          if(data.id){\r\n             this.props.loadUser(data)\r\n             this.props.onRouteChange('home');\r\n          }\r\n             \r\n        })\r\n\r\n\r\n\r\n    \r\n  \r\n       \r\n}\r\n  render(){\r\n    const {onRouteChange}=this.props;\r\n    return(\r\n<div className=\"pa4 black-80 shadow-5 w-30 center\">\r\n  <div className=\"measure\">\r\n    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n      <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n        <input \r\n        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n        type=\"email\" \r\n        name=\"email-address\"  \r\n        id=\"email-address\"\r\n        onChange={this.onEmailChange}/>\r\n      </div>\r\n      <div className=\"mv3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n        <input \r\n        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n        type=\"password\" \r\n        name=\"password\"  \r\n        id=\"password\"\r\n        onChange={this.onPasswordChange}\r\n        />\r\n      </div>\r\n    </fieldset>\r\n    <div className=\"\">\r\n      <input \r\n      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n      type=\"submit\" \r\n      value=\"Sign in\" \r\n      onClick={this.onSubmitSignIn}/>\r\n    </div>\r\n    <div className=\"lh-copy mt3\">\r\n      <p className=\"f6 link dim black db pointer\" onClick={()=>onRouteChange('Register')}>Register</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n    )\r\n  } \r\n\t\r\n\t\t\r\n}\r\nexport default SignIn;\r\n","import React,{Component} from 'react';\r\nclass Register extends Component {\r\nconstructor(props){\r\n  super(props);\r\n  this.state={\r\n    name:'',\r\n    email:'',\r\n    password:''\r\n  }\r\n}\r\n\r\n\r\n\r\nonNameChange=(data)=>{\r\n  this.setState({name:data.target.value})\r\n}\r\n\r\n   onEmailChange=(data)=>{\r\n  this.setState({email:data.target.value})\r\n}\r\nonPasswordChange=(data)=>{\r\n  this.setState({password:data.target.value})\r\n}\r\nonSubmitRegister= () =>{\r\nfetch('https://frozen-mountain-28132.herokuapp.com/register',{\r\n        method:'post',\r\n        headers:{'Content-Type':'application/json'},\r\n        body:JSON.stringify({\r\n          name:this.state.name,\r\n          email:this.state.email,\r\n          password:this.state.password\r\n        })\r\n      })\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n          if (data.id){\r\n            this.props.loadUser(data)\r\n            this.props.onRouteChange('home');\r\n          }\r\n        })\r\n}\r\n\r\n\r\nrender(){\r\n    return(\r\n    \r\n<div className=\"pa4 black-80 shadow-5 w-30 center\">\r\n  <div className=\"measure\">\r\n    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n      <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n        <input \r\n        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n         type=\"name\" \r\n         name=\"name\"  \r\n         id=\"name\"\r\n         onChange={this.onNameChange}/>\r\n      </div>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n        <input \r\n        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n        type=\"email\" \r\n        name=\"email-address\"  \r\n        id=\"email-address\"\r\n        onChange={this.onEmailChange}/>\r\n      </div>\r\n      <div className=\"mv3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n        <input \r\n        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n        type=\"password\" \r\n        name=\"password\"  \r\n        id=\"password\"\r\n        onChange={this.onPasswordChange}/>\r\n      </div>\r\n    </fieldset>\r\n    <div className=\"\">\r\n      <input \r\n      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n      type=\"submit\" \r\n      value=\"Register\" \r\n      onClick={this.onSubmitRegister}\r\n      />\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default Register;\r\n","import React,{Component} from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation.js';\nimport Logo from './components/logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\nimport FaceRecognation from './components/FaceRecognation/FaceRecognation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nconst ParticleOption = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\n\nconst initialstate=  {\n\tinput:'',\n\t\timageUrl:'',\n\t\tbox:{},\n\t\troute:'SignIn',\n\t\tisSignedIn:false,\n\t\tuser:{\n\t\t\tid:'',\n\t\t\tname:'',\n\t\t\temail:'',\n\t\t\tentries:'',\n\t\t\tjoined:''\n}\n}   \nclass  App extends Component {\n\tconstructor(){\n\tsuper();\n\tthis.state=initialstate;\n}\nloadUser=(data)=>{\n\tthis.setState({user:{\n\t\t\tid:data.id,\n\t\t\tname:data.name,\n\t\t\temail:data.email,\n\t\t\tentries:data.entries,\n\t\t\tjoined:data.joined\n\t}\n\t\t\t\n\t})\n\n}\n// componentDidMount(){\n\t// fetch('http://localhost:3000')\n\t// .then(response=>response.json())\n\t// .then(data=>console.log(data))\n\n// }\ncalculateFace=(data)=>{\n\tconst clarifaiFace =data.outputs[0].data.regions[0].region_info.bounding_box;\n\tconst image =document.getElementById('face');\n\tconst width=Number(image.width);\n\tconst height =Number(image.height);\n\treturn{\n\t  leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n\t}\n\t\n}\ndisplayFaceBox =(box)=>{\n\tthis.setState({box:box})\n}\nonInputChange=(event)=>{\n\tthis.setState({input: event.target.value})\n}\nonButtonSubmit=()=>{\n\tthis.setState({imageUrl:this.state.input})\n\n\t \n          fetch('https://frozen-mountain-28132.herokuapp.com/image', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response =>response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count}))\n              if (count) {  \n\t\t\t\tfetch('https://frozen-mountain-28132.herokuapp.com/imageurl',{\n\t\t\t\t \tmethod:'post',\n\t\t\t\t \theaders:{'Content-Type':'application/json'},\n\t\t\t        body:JSON.stringify({\n\t\t\t          url:this.state.imageUrl\n\t\t\t         \n\t\t\t      })\n\t\t\t    })\n\t\t\t     .then(response=>response.json())\n\n\t\t\t\t.then(response => {\n\t\t\t        \n\t\t\t        this.displayFaceBox(this.calculateFace(response))\n\t\t\t      })}\n            })\n\n     \n      .catch(err => console.log(err));\n\n  }\nonRouteChange=(route)=>{\n\tif(route ==='SignIn'){\n\t\tthis.setState(initialstate)\n\t}else if(route==='home'){\n\t\tthis.setState({isSignedIn:true})\n\t}\n\tthis.setState({route: route})\n}\n\n render(){\n  return (\n    <div className=\"App\">\n     <Particles className='particles' \n                params={ParticleOption} />\n\n      <Navigation isSignedIn={this.state.isSignedIn}onRouteChange={this.onRouteChange}/>\n     {this.state.route === 'home'?\n      <div>\n\t      <Logo/>\n\t      <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n\t      <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n\t      <FaceRecognation box={this.state.box} imageUrl={this.state.imageUrl}/>\n      </div>\n  \t:(this.state.route === 'SignIn'?\n  \t<SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n  \t\t:<Register loadUser={this.loadUser}onRouteChange={this.onRouteChange}/>)}\n    </div>\n  )};\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.29b5ec08.png\";"],"sourceRoot":""}